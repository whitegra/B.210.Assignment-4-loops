# -*- coding: utf-8 -*-
"""Assignment #4: While Loops

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_yzgOuhcmlGx5APYWgG7X7GDQ3ogrAUR

LCM / GCF CALCULATOR

THIS IF FOR THE CHARACTER SCANNER
"""

def lcm_gcf():
    while True:
        try:
            num_1 = input("Enter the first number: ")
            # to make sure integer is positive
            if num_1[0] == "-":
                print("You have entered a negative integer. Please try again.")
                continue

            num_2 = input("Enter the second number: ")
            # same w/ num_1
            if num_2[0] == "-":
                print("You have entered a negative integer. Please try again. ")
                continue

            # define numbers as integers to handle ValueErrors
            num_1 = int(num_1)
            num_2 = int(num_2)
        # in case the user doesn't enter an integer
        except ValueError:
            print("You have entered an invalid integer. Please try again")
            continue

        # find smallest and largest integers for the calculations
        if num_1 > num_2:
            largest_num = num_1
            smallest_num = num_2
        else:
            largest_num = num_2
            smallest_num = num_1

        # calculation choice
        calc_choice = input("Enter the calculation you would like to perform ('g' for GCF or 'l' for LCM): ")
        # if the user types an invalid option ...
        if calc_choice != 'g' and calc_choice != 'l':
            print("Invalid choice. Please try again. ")
            continue

        # for GCF (smallest_num % larger_num i - 1)
        elif calc_choice == 'g':
            while True:
                if num_1 % smallest_num == 0 and num_2 % smallest_num == 0:
                    GCF_num = smallest_num
                    break
                # iterate by -1 if the condition isn't met (GO)
                smallest_num -= 1

            print("________________________")
            print("The GCF is:", GCF_num)
            print("________________________")
            break

        # for LCM (largest_num % smallest_num i + 1)   #LCM IS 1 * 2 % == 0 (SMALLEST MULT FACTOR NOT FROM LARGEST NUM AND I += 1 NOT MINUS)
        elif calc_choice == 'l':
            l_largest_num = largest_num
            while True:
                if l_largest_num % num_1 == 0 and l_largest_num % num_2 == 0:
                    LCM_num = l_largest_num
                    break
                # iterate by (i + 1)
                l_largest_num += 1

            print("________________________")
            print("The LCM is:", LCM_num)
            print("________________________")
            break

"""THIS IS FOR PASSAGE SCANNER
- it should work as expected .... hopefully ....
"""

def passage_scanner():
  while True:   # PUT RUN_AGAIN IN MAIN
    passage_text = input("Enter a passage that is at lease 200 chracters long: ")
    # to make sure passage > 200 characters **IT HAS TO BE MORE THAN 200 NOT LESS**
    if len(pasaage_text) < 200:
      pasaage_text = input("Plase neter a pasaage that is at lease 200 characters long. ")

    user_char = input("Enter a the character you would like to scan the pasaage for: ")
    # in case user enters more than one character OR if the char isnt in the passage .....
    if len(user_char) > 1 or user_char not in passage_text:   # this is in case its more than 1 character OR if the chracter is not in the passage
      user_char = input("Please re enter a character: ")

    # TO CHECK AND COUNT IN PASSAGE
    user_char_count = 0
    for character in passage_text:
      if character == user_char:
        # if the character is in the passage, count 1...
        user_char_count += 1
      # to print the number of times the chracter is in the passage:
      print("The number of time that the character appeared in the passage", user_char_count)

"""MAIN
- references def lcm_gcf()
- referneces passage_scanner()
- 'stop' to exit
"""

while True:
  # for user to chose the program
  program_choice = input("Enter the program you would like to run: ('c' for LCM/ GCF or 'p' for passage: )")

  # in case user enters an invalid program choice
  if program_choice != 'c' and program_choice != 'p':
    print("Invalid choice. Please try again. ")
    continue

  # FOR LCM / GCF
  elif program_choice == 'c':
    lcm_gcf()
    run_again = input("Would you like to run the program again? ('y' for yes, 'stop' to exit. ): ") # MUST BE IN MAIN WILL NOT WORK IN USER DEF FUNCT
    if run_again != 'y':
      break
    else:
      lcm_gcf()
  # FOR PASSAGE SCANNER
  elif program_choice == 'p':
    passage_scanner()
    run_passage_again = input("Would you like to run the program again? ('y' for yes, 'stop' to exit. ") # AGAIN, PUT IN MAIN
    if run_again != 'y':
      break
    else:
      run_passage_again()
  # invlaid choice
  else:
    print("invalid choice. Please try again. /n")
    continue
# run program again (while loop)
  run_program_again = input("Would you like to run the program again? ('y' for yes, 'stop' to exit): ")
  if run_program_again != 'y':
    break